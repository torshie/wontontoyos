compileSubdirectories = $(addsuffix /compile, $(MODULES))
buildSubdirectories = $(addsuffix /build, $(MODULES))
buildRequiredModules = $(addsuffix /build, $(REQUIRED_MODULES))
cleanSubdirectories = $(addsuffix /clean, $(MODULES))

targetsNeeded = $(buildRequiredModules) compile $(buildSubdirectories)
ifdef LIBRARY
  targetsNeeded += $(buildDirectory)/$(LIBRARY)
endif
targetsNeeded += $(TARGETS)

build: $(targetsNeeded)

.PHONY: clean compile $(compileSubdirectories) $(buildRequiredModules)

.SUFFIXES: .x86 .mak

$(buildRequiredModules) $(compileSubdirectories) $(buildSubdirectories) $(cleanSubdirectories):
	@$(MAKE) -C $(@D) $(@F)

$(rootBuildDirectory)/%.o: $(WONTON)/%.cpp $(buildDirectoryMagic)
	#  CC $(@F)
	@$(CXX) $(compilerFlags) $(x64Flags) -c -o $@ $<

$(rootBuildDirectory)/%.x86: $(WONTON)/%.cpp $(buildDirectoryMagic) 
	#  CC.X86 $(@F)
	@$(CXX) $(compilerFlags) $(x86Flags) -c -o $@ $<

$(rootBuildDirectory)/%.o: $(WONTON)/%.S $(buildDirectoryMagic)
	#  AS $(@F)
	@$(CXX) $(compilerFlags) $(x64Flags) $(asmFlags) -c -o $@ $<

$(rootBuildDirectory)/%.x86: $(WONTON)/%.S $(buildDirectoryMagic)
	#  AS.X86 $(@F)
	@$(CXX) $(compilerFlags) $(x86Flags) $(asmFlags) -c -o $@ $<

%.o: %.cpp
	#  CC $(@F)
	@$(CXX) $(compilerFlags) $(x64Flags) -c -o $@ $<

%.mak: %.cpp
	#  MF $(@F)
	@$(CXX) $(compilerFlags) $(x64Flags) -M -MF $@ -MT $*.o $<

$(rootBuildDirectory)/%.mak: $(WONTON)/%.cpp $(buildDirectoryMagic)
	#  MF $(@F)
	@$(CXX) $(compilerFlags) $(x64Flags) -M -MF $@ -MT $(rootBuildDirectory)/$*.o $<

compile: $(buildDirectoryMagic) $(compileSubdirectories) $(objectFiles)

$(buildDirectoryMagic):
	@mkdir -p $(buildDirectory)
	@touch $@

$(FINAL_IMAGE): $(DEBUG_SYMBOL_IMAGE)
	#  STRIP $(@F)
	@cp $^ $@
	@$(STRIP) $@
	#  OBJCOPY $(@F)
	@$(OBJCOPY) -R .lto $@

$(DEBUG_SYMBOL_IMAGE): $(allObjectFiles) $(REQUIRED_LIBRARIES) $(LINKER_SCRIPT)
	#  LD $(@F)
	@$(CXX) $(allObjectFiles) $(linkerFlags) -T $(LINKER_SCRIPT) -o $@

ifdef LIBRARY
$(buildDirectory)/$(LIBRARY): $(allObjectFiles)
	#  AR $(@F)
	@$(AR) rcs $@ $(allObjectFiles)

clean: $(cleanSubdirectories)
	#  CLEAN $(notdir $(CURDIR))
	@rm -f $(buildDirectory)/*.o $(buildDirectory)/*.mak \
		$(CLEAN) $(FINAL_IMAGE) $(DEBUG_SYMBOL_IMAGE) $(buildDirectory)/$(LIBRARY)
else
clean: $(cleanSubdirectories)
	#  CLEAN $(notdir $(CURDIR))
	@rm -f $(buildDirectory)/*.o $(buildDirectory)/*.mak \
		$(CLEAN) $(FINAL_IMAGE) $(DEBUG_SYMBOL_IMAGE)
endif

dependencyFiles = $(addprefix $(buildDirectory)/, $(MAK_FILES))
ifneq ($(MAKECMDGOALS), clean)
  ifneq ($(MAKECMDGOALS), veryclean)
    -include $(dependencyFiles)
  endif
endif

