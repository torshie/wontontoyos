#ifndef KERNEL_X64_CONSTANT_H_INCLUDED
#define KERNEL_X64_CONSTANT_H_INCLUDED

#include <DEFINE.h>

namespace kernel {

enum X64ArchitectureConstant {
	/* Bits of register CR0 */
	CR0_BIT_PAGING = 31,
	CR0_BIT_CACHE_DISABLE = 30,
	CR0_BIT_NOT_WRITE_THROUGH = 29,
	CR0_BIT_ALIGNMENT_MASK = 18,
	CR0_BIT_WRITE_PROTECT = 16,
	CR0_BIT_NUMERIC_ERROR = 5,
	CR0_BIT_EXTENSION_TYPE = 4,
	CR0_BIT_TASK_SWITCHED = 3,
	CR0_BIT_EMULATION = 2,
	CR0_BIT_MONITOR_COPROCESSOR = 1,
	CR0_BIT_PROTECTION_ENABLED = 0,

	/* Bits of register CR4 */
	CR4_BIT_OS_UNMASKED_EXCEPTION_SUPPORT = 10,
	CR4_BIT_OS_FXSAVE_FXRSTOR_SUPPORT = 9,
	CR4_BIT_PERFORMANCE_MONITORING_COUNTER_ENABLE = 8,
	CR4_BIT_PAGE_GLOBAL_ENABLE = 7,
	CR4_BIT_MACHINE_CHECK_ENABLE = 6,
	CR4_BIT_PHYSICAL_ADDRESS_EXTENSION = 5,
	CR4_BIT_PAGE_SIZE_EXTENSION = 4,
	CR4_BIT_DEBUGGING_EXTENSION = 3,
	CR4_BIT_TIME_STAMP_DISABLE = 2,
	CR4_BIT_PROTECTED_MODE_VIRTUAL_INTERRUPTS = 1,
	CR4_BIT_VIRUTAL_8086_MODE_EXTENSION = 0,

	/* Bits of register Extended Feature Enable Register */
	EFER_BIT_FAST_FXSAVE_FXRSTOR = 14,
	EFER_BIT_LONG_MODE_SEGMENT_LIMIT_ENABLE = 13,
	EFER_BIT_SECURE_VIRTUAL_MACHINE_ENABLE = 12,
	EFER_BIT_NO_EXECUTE_ENABLE = 11,
	EFER_BIT_LONG_MODE_ACTIVE = 10,
	EFER_BIT_LONG_MODE_ENABLE = 8,
	EFER_BIT_SYSTEM_CALL_EXTENSION = 0,

	/* Bits of APIC Base Address Register */
	ABAR_BIT_APIC_ENABLE = 11,
	ABAR_BIT_BOOT_STRAP_CPU_CORE = 8,

	/* MSR */
	MSR_EXTENDED_FEATURE_ENABLE_REGISTER = 0x00C0000080,
	MSR_SYS_TARGET_ADDRESS_REGISTER = 0xC0000081,
	MSR_LONG_SYSCALL_TARGET_ADDRESS_REGISTER = 0xC0000082,
	MSR_SYSCALL_FLAG_MASK = 0xC0000084,
	MSR_APIC_BASE_ADDRES_REGISTER = 0x1B,

	PAGE_SIZE = 0x1000
};

} // namespace kernel

#endif /* KERNEL_X64_CONSTANT_H_INCLUDED */
